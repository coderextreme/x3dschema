<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">

<X3D profile="Immersive" version="3.3"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-3.3.xsd">
    <head>
        <meta content="John W Carlson" name="creator"/>
        <meta content="December 13 2015" name="created"/>
        <meta content="April 18 2017" name="modified"/>
        <meta content="fors2.x3d" name="title"/>
        <meta
            content="https://coderextreme.net/X3DJSONLD/src/main/data/fors2.x3d" name="identifier"/>
        <meta content="beginnings of a force directed graph in 3D" name="description"/>
        <meta content="Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit" name="generator"/>
    </head>
    <Scene>
        <ProtoDeclare name="node">
            <ProtoInterface>
                <field accessType="inputOutput" name="position"
                    type="SFVec3f" value="0 0 0"/>
            </ProtoInterface>
            <ProtoBody>
                <Transform DEF="transform">
                    <IS>
                        <connect nodeField="translation" protoField="position"/>
                    </IS>
                    <Shape>
                        <!--"comment before Sphere"-->
                        <!--"comment after Sphere"-->
                        <!--"comment after Appearance"-->
                        <Sphere/>
                        <Appearance>
                            <!--"comment before Material"-->
                            <!--"comment after Material"-->
                            <Material diffuseColor="1 0 0"/>
                        </Appearance>
                    </Shape>
                </Transform>
                <PositionInterpolator DEF="NodePosition" key="0 1" keyValue="0 0 0 0 5 0"/>
                <Script DEF="MoveBall">
                    <field accessType="inputOutput" name="translation"
                        type="SFVec3f" value="50 50 0"/>
                    <field accessType="inputOutput" name="old"
                        type="SFVec3f" value="0 0 0"/>
                    <field accessType="inputOnly" name="set_cycle" type="SFTime"/>
                    <field accessType="outputOnly" name="keyValue" type="MFVec3f"/><![CDATA[""
" ecmascript:"
"\t\t\t\t\tfunction set_cycle(value) {"
"                                                old = translation;"
"\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);"
"                                                keyValue = new MFVec3f([old, translation]);"
"\t\t\t\t\t\t// Browser.println(translation);"
"\t\t\t\t\t}"
""]]></Script>
                <TimeSensor DEF="nodeClock" cycleInterval="3" loop="true"/>
                <ROUTE fromField="cycleTime" fromNode="nodeClock"
                    toField="set_cycle" toNode="MoveBall"/>
                <ROUTE fromField="fraction_changed" fromNode="nodeClock"
                    toField="set_fraction" toNode="NodePosition"/>
                <ROUTE fromField="keyValue" fromNode="MoveBall"
                    toField="keyValue" toNode="NodePosition"/>
                <ROUTE fromField="value_changed" fromNode="NodePosition"
                    toField="set_translation" toNode="transform"/>
            </ProtoBody>
        </ProtoDeclare>
        <ProtoDeclare name="cylinder">
            <ProtoInterface>
                <field accessType="inputOnly" name="positionA" type="SFVec3f"/>
                <field accessType="inputOnly" name="positionB" type="SFVec3f"/>
            </ProtoInterface>
            <ProtoBody>
                <Shape>
                    <Extrusion DEF="extrusion" creaseAngle="0.785"
                        crossSection="1 0 0.92 -0.38 0.71 -0.71 0.38 -0.92 0 -1 -0.38 -0.92 -0.71 -0.71 -0.92 -0.38 -1 0 -0.92 0.38 -0.71 0.71 -0.38 0.92 0 1 0.38 0.92 0.71 0.71 0.92 0.38 1 0" spine="0 -50 0 0 0 0 0 50 0"/>
                    <Appearance>
                        <Material diffuseColor="0 1 0"/>
                    </Appearance>
                </Shape>
                <Script DEF="MoveCylinder">
                    <field accessType="inputOutput" name="spine"
                        type="MFVec3f" value="0 -50 0 0 0 0 0 50 0"/>
                    <field accessType="inputOnly" name="set_endA" type="SFVec3f"/>
                    <field accessType="inputOnly" name="set_endB" type="SFVec3f"/>
                    <IS>
                        <connect nodeField="set_endA" protoField="positionA"/>
                        <connect nodeField="set_endB" protoField="positionB"/>
                    </IS><![CDATA[""
" ecmascript:"
""
"                function set_endA(value) {"
"\t\t    if (typeof spine === \"undefined\") {"
"\t\t        spine = new MFVec3f([value, value]);"
"\t\t    } else {"
"\t\t        spine = new MFVec3f([value, spine[1]]);"
"\t\t    }"
"                }"
""
"                function set_endB(value) {"
"\t\t    if (typeof spine === \"undefined\") {"
"\t\t        spine = new MFVec3f([value, value]);"
"\t\t    } else {"
"\t\t        spine = new MFVec3f([spine[0], value]);"
"\t\t    }"
"                }"
""
"                function set_spine(value) {"
"\t\t    Browser.print('\n'+'\"');"
"                    spine = value;"
"                }"
""]]></Script>
                <ROUTE fromField="spine" fromNode="MoveCylinder"
                    toField="set_spine" toNode="extrusion"/>
            </ProtoBody>
        </ProtoDeclare>
        <Transform scale="0.1 0.1 0.1">
            <ProtoInstance DEF="nodeA" name="node">
                <fieldValue name="position" value="-50 -50 -50"/>
            </ProtoInstance>
            <ProtoInstance DEF="nodeB" name="node">
                <fieldValue name="position" value="50 50 50"/>
            </ProtoInstance>
            <ProtoInstance DEF="linkA" name="cylinder">
                <fieldValue name="positionA" value="0 0 0"/>
                <fieldValue name="positionB" value="50 50 50"/>
            </ProtoInstance>
        </Transform>
        <ROUTE fromField="position" fromNode="nodeA" toField="positionA" toNode="linkA"/>
        <ROUTE fromField="position" fromNode="nodeB" toField="positionB" toNode="linkA"/>
    </Scene>
</X3D>
