<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">

<X3D profile="Immersive" version="3.3"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-3.3.xsd">
    <head>
        <meta content="John W Carlson" name="creator"/>
        <meta content="December 13 2015" name="created"/>
        <meta content="forcenode.x3d" name="title"/>
        <meta
            content="https://coderextreme.net/X3DJSONLD/src/main/data/force.x3d" name="identifier"/>
        <meta content="beginnings of a force directed graph in 3D" name="description"/>
        <meta content="Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit" name="generator"/>
    </head>
    <Scene>
        <ProtoDeclare name="node">
            <ProtoInterface>
                <field accessType="inputOutput" name="position"
                    type="SFVec3f" value="0 0 0"/>
            </ProtoInterface>
            <ProtoBody>
                <Group>
                    <Transform DEF="transform">
                        <IS>
                            <connect nodeField="translation" protoField="position"/>
                        </IS>
                        <Shape>
                            <Sphere/>
                            <Appearance>
                                <Material diffuseColor="1 0 0"/>
                            </Appearance>
                        </Shape>
                        <Transform translation="1 0 1">
                            <Shape>
                                <Text string="&quot;Node&quot;">
                                    <FontStyle
                                    justify="&quot;MIDDLE&quot; &quot;MIDDLE&quot;" size="5"/>
                                </Text>
                                <Appearance>
                                    <Material diffuseColor="0 0 1"/>
                                </Appearance>
                            </Shape>
                        </Transform>
                    </Transform>
                    <PositionInterpolator DEF="NodePosition" key="0 1" keyValue="0 0 0 0 5 0"/>
                    <Script DEF="MoveBall">
                        <field accessType="inputOutput"
                            name="translation" type="SFVec3f" value="50 50 0"/>
                        <field accessType="inputOutput" name="old"
                            type="SFVec3f" value="0 0 0"/>
                        <field accessType="inputOnly" name="set_cycle" type="SFTime"/>
                        <field accessType="outputOnly" name="keyValue" type="MFVec3f"/><![CDATA[""
""
"ecmascript:"
"\t\t\t\t\tfunction set_cycle(value) {"
"                                                old = translation;"
"\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);"
"                                                keyValue = new MFVec3f([old, translation]);"
"\t\t\t\t\t\t// Browser.println(translation);"
"\t\t\t\t\t}"
""
""]]></Script>
                    <TimeSensor DEF="nodeClock" cycleInterval="3" loop="true"/>
                    <ROUTE fromField="cycleTime" fromNode="nodeClock"
                        toField="set_cycle" toNode="MoveBall"/>
                    <ROUTE fromField="fraction_changed"
                        fromNode="nodeClock" toField="set_fraction" toNode="NodePosition"/>
                    <ROUTE fromField="keyValue" fromNode="MoveBall"
                        toField="keyValue" toNode="NodePosition"/>
                    <ROUTE fromField="value_changed"
                        fromNode="NodePosition"
                        toField="set_translation" toNode="transform"/>
                </Group>
            </ProtoBody>
        </ProtoDeclare>
        <ProtoDeclare name="cylinder">
            <ProtoInterface>
                <field accessType="inputOnly" name="set_positionA" type="SFVec3f"/>
                <field accessType="inputOnly" name="set_positionB" type="SFVec3f"/>
            </ProtoInterface>
            <ProtoBody>
                <Group>
                    <Shape>
                        <Extrusion DEF="extrusion" creaseAngle="0.785"
                            crossSection="1.00 0.00 0.92 -0.38 0.71 -0.71 0.38 -0.92 0.00 -1.00 -0.38 -0.92 -0.71 -0.71 -0.92 -0.38 -1.00 0.00 -0.92 0.38 -0.71 0.71 -0.38 0.92 0.00 1.00 0.38 0.92 0.71 0.71 0.92 0.38 1.00 0.00" spine="0 -50 0 0 50 0"/>
                        <Appearance>
                            <Material diffuseColor="0 1 0"/>
                        </Appearance>
                    </Shape>
                    <Script DEF="MoveCylinder">
                        <field accessType="inputOutput" name="spine"
                            type="MFVec3f" value="0 -50 0 0 50 0"/>
                        <field accessType="inputOnly" name="set_endA" type="SFVec3f"/>
                        <field accessType="inputOnly" name="set_endB" type="SFVec3f"/>
                        <IS>
                            <connect nodeField="set_endA" protoField="set_positionA"/>
                            <connect nodeField="set_endB" protoField="set_positionB"/>
                        </IS><![CDATA[""
""
"ecmascript:"
""
"                function set_endA(value) {"
"\t\t    if (typeof spine === 'undefined') {"
"\t\t        spine = new MFVec3f([value, value]);"
"\t\t    } else {"
"\t\t        spine = new MFVec3f([value, spine[1]]);"
"\t\t    }"
"                }"
""
"                function set_endB(value) {"
"\t\t    if (typeof spine === 'undefined') {"
"\t\t        spine = new MFVec3f([value, value]);"
"\t\t    } else {"
"\t\t        spine = new MFVec3f([spine[0], value]);"
"\t\t    }"
"                }"
""
"                function set_spine(value) {"
"                    spine = value;"
"                }"
""
""]]></Script>
                    <ROUTE fromField="spine" fromNode="MoveCylinder"
                        toField="set_spine" toNode="extrusion"/>
                </Group>
            </ProtoBody>
        </ProtoDeclare>
        <Transform DEF="HoldsContent" scale="0.1 0.1 0.1">
            <PlaneSensor DEF="clickGenerator"
                description="click on background to add nodes, click on nodes to add links"
                maxPosition="50 50" minPosition="-50 -50"/>
            <ProtoInstance DEF="nodeA" name="node">
                <fieldValue name="position" value="0.0 0.0 0.0"/>
            </ProtoInstance>
            <ProtoInstance DEF="nodeB" name="node">
                <fieldValue name="position" value="50.0 50.0 50.0"/>
            </ProtoInstance>
            <ProtoInstance DEF="nodeC" name="node">
                <fieldValue name="position" value="-50.0 -50.0 -50.0"/>
            </ProtoInstance>
            <ProtoInstance DEF="nodeD" name="node">
                <fieldValue name="position" value="50.0 50.0 -50.0"/>
            </ProtoInstance>
            <ProtoInstance DEF="linkA" name="cylinder">
                <fieldValue name="set_positionA" value="0 0 0"/>
                <fieldValue name="set_positionB" value="50 50 50"/>
            </ProtoInstance>
            <ProtoInstance DEF="linkB" name="cylinder">
                <fieldValue name="set_positionA" value="0 0 0"/>
                <fieldValue name="set_positionB" value="-50 -50 -50"/>
            </ProtoInstance>
            <ProtoInstance DEF="linkC" name="cylinder">
                <fieldValue name="set_positionA" value="50 50 50"/>
                <fieldValue name="set_positionB" value="50 50 -50"/>
            </ProtoInstance>
        </Transform>
        <Script DEF="clickHandler">
            <field accessType="inputOutput" name="counter"
                type="SFInt32" value="0"/>
            <field accessType="outputOnly" name="node_changed" type="SFNode"/>
            <field accessType="inputOnly" name="add_node" type="SFBool" value="false"/>
            <!--"<field name="ModifiableNode" type="SFNode" accessType="inputOutput"> <Transform USE="HoldsContent"/> </field>"--><![CDATA[""
"\t"
"ecmascript:"
"\tfunction add_node(value) {"
"                // Browser.print('hey ', counter);"
"                counter = counter++;"
"\t\tBrowser.appendTo(Browser.getDocument().querySelector(\"field [name=ModifiableNode]\"),"
"\t\t\t{ \"ProtoInstance\":"
"\t\t\t\t{ \"@name\":\"node\","
"\t\t\t\t  \"@DEF\":\"node'+counter+'\","
"\t\t\t\t  \"fieldValue\": ["
"\t\t\t\t\t{"
"\t\t\t\t\t\t \"@name\":\"position\","
"\t\t\t\t\t\t \"@value\":[0.0,0.0,0.0]"
"\t\t\t\t\t}"
"\t\t\t\t  ]"
"\t\t\t\t}"
"\t\t\t});"
""
"        }"
"\t"
""]]></Script>
        <ROUTE fromField="isActive" fromNode="clickGenerator"
            toField="add_node" toNode="clickHandler"/>
        <ROUTE fromField="position" fromNode="nodeA"
            toField="set_positionA" toNode="linkA"/>
        <ROUTE fromField="position" fromNode="nodeB"
            toField="set_positionB" toNode="linkA"/>
        <ROUTE fromField="position" fromNode="nodeA"
            toField="set_positionA" toNode="linkB"/>
        <ROUTE fromField="position" fromNode="nodeC"
            toField="set_positionB" toNode="linkB"/>
        <ROUTE fromField="position" fromNode="nodeA"
            toField="set_positionA" toNode="linkC"/>
        <ROUTE fromField="position" fromNode="nodeD"
            toField="set_positionB" toNode="linkC"/>
    </Scene>
</X3D>
