<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D
  PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance"
      profile="Immersive"
      version="3.3"
      xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-3.3.xsd">
   <head>
      <meta content="arc2.x3d" name="title"/>
      <meta content="Lost, Doug Sanden I think" name="creator"/>
      <meta content="manual" name="generator"/>
      <meta content="https://coderextreme.net/X3DJSONLD/src/main/data/arc1.x3d"
             name="identifier"/>
      <meta content="a generic proto to connect two objects" name="description"/>
   </head>
   <Scene>
      <Viewpoint description="Only Viewpoint" position="0 0 5"/>
      <Background skyColor="0.4 0.4 0.4"/>
      <Transform DEF="G1">
         <Transform DEF="DECLpoint_INSTANCE_node">
            <Shape>
               <Sphere containerField="geometry" radius="0.1"/>
               <Appearance>
                  <Material diffuseColor="1 0 0"/>
               </Appearance>
            </Shape>
            <PositionInterpolator DEF="DECLpoint_INSTANCE_PI1" key="0 1" keyValue="0 0 0 0 5 0"/>
            <Script DEF="DECLpoint_INSTANCE_MB1">
               <field accessType="inputOutput"
                       name="translation"
                       type="SFVec3f"
                       value="0 0 0"/>
               <field accessType="inputOutput"
                       name="old"
                       type="SFVec3f"
                       value="0 0 0"/>
               <field accessType="inputOnly" name="set_location" type="SFTime"/>
               <field accessType="inputOutput"
                       name="keyValue"
                       type="MFVec3f"
                       value="0 0 0 0 5 0"/>""&#xD;
""&#xD;
""&#xD;
"ecmascript:"&#xD;
"               function set_location(value) {"&#xD;
"                    old = translation;"&#xD;
"                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);"&#xD;
"                    keyValue = new MFVec3f(old, translation);"&#xD;
"               }"&#xD;
""&#xD;
""&#xD;
""</Script>
            <TimeSensor DEF="DECLpoint_INSTANCE_CL1" cycleInterval="3" loop="true"/>
            <ROUTE fromField="cycleTime"
                    fromNode="DECLpoint_INSTANCE_CL1"
                    toField="set_location"
                    toNode="DECLpoint_INSTANCE_MB1"/>
            <ROUTE fromField="fraction_changed"
                    fromNode="DECLpoint_INSTANCE_CL1"
                    toField="set_fraction"
                    toNode="DECLpoint_INSTANCE_PI1"/>
            <ROUTE fromField="keyValue"
                    fromNode="DECLpoint_INSTANCE_MB1"
                    toField="keyValue"
                    toNode="DECLpoint_INSTANCE_PI1"/>
            <ROUTE fromField="value_changed"
                    fromNode="DECLpoint_INSTANCE_PI1"
                    toField="set_translation"
                    toNode="DECLpoint_INSTANCE_node"/>
            <ROUTE fromField="translation_changed"
                    fromNode="DECLpoint_INSTANCE_MB1"
                    toField="set_translation"
                    toNode="DECLpoint_INSTANCE_node"/>
         </Transform>
      </Transform>
      <Transform DEF="G2">
         <Transform DEF="DECLpoint_INSTANCE1000_node">
            <Shape>
               <Sphere containerField="geometry" radius="0.1"/>
               <Appearance>
                  <Material diffuseColor="1 0 0"/>
               </Appearance>
            </Shape>
            <PositionInterpolator DEF="DECLpoint_INSTANCE1000_PI1" key="0 1" keyValue="0 0 0 0 5 0"/>
            <Script DEF="DECLpoint_INSTANCE1000_MB1">
               <field accessType="inputOutput"
                       name="translation"
                       type="SFVec3f"
                       value="0 0 0"/>
               <field accessType="inputOutput"
                       name="old"
                       type="SFVec3f"
                       value="0 0 0"/>
               <field accessType="inputOnly" name="set_location" type="SFTime"/>
               <field accessType="inputOutput"
                       name="keyValue"
                       type="MFVec3f"
                       value="0 0 0 0 5 0"/>""&#xD;
""&#xD;
""&#xD;
"ecmascript:"&#xD;
"               function set_location(value) {"&#xD;
"                    old = translation;"&#xD;
"                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);"&#xD;
"                    keyValue = new MFVec3f(old, translation);"&#xD;
"               }"&#xD;
""&#xD;
""&#xD;
""</Script>
            <TimeSensor DEF="DECLpoint_INSTANCE1000_CL1" cycleInterval="3" loop="true"/>
            <ROUTE fromField="cycleTime"
                    fromNode="DECLpoint_INSTANCE1000_CL1"
                    toField="set_location"
                    toNode="DECLpoint_INSTANCE1000_MB1"/>
            <ROUTE fromField="fraction_changed"
                    fromNode="DECLpoint_INSTANCE1000_CL1"
                    toField="set_fraction"
                    toNode="DECLpoint_INSTANCE1000_PI1"/>
            <ROUTE fromField="keyValue"
                    fromNode="DECLpoint_INSTANCE1000_MB1"
                    toField="keyValue"
                    toNode="DECLpoint_INSTANCE1000_PI1"/>
            <ROUTE fromField="value_changed"
                    fromNode="DECLpoint_INSTANCE1000_PI1"
                    toField="set_translation"
                    toNode="DECLpoint_INSTANCE1000_node"/>
            <ROUTE fromField="translation_changed"
                    fromNode="DECLpoint_INSTANCE1000_MB1"
                    toField="set_translation"
                    toNode="DECLpoint_INSTANCE1000_node"/>
         </Transform>
      </Transform>
      <Transform DEF="transC1">
         <Transform DEF="rotscaleC1">
            <Shape>
               <Appearance>
                  <Material diffuseColor="0.2 0.7 0.7" transparency="0.5"/>
               </Appearance>
               <Cylinder containerField="geometry" radius="0.05"/>
            </Shape>
         </Transform>
      </Transform>
      <Script DEF="DECLx3dconnector_connector1_S1">
         <field accessType="initializeOnly" name="startnode" type="SFNode">
            <Transform USE="G1"/>
         </field>
         <field accessType="initializeOnly" name="endnode" type="SFNode">
            <Transform USE="G2"/>
         </field>
         <field accessType="initializeOnly" name="transC1" type="SFNode">
            <Transform USE="transC1"/>
         </field>
         <field accessType="initializeOnly" name="rotscaleC1" type="SFNode">
            <Transform USE="rotscaleC1"/>
         </field>
         <field accessType="inputOnly" name="set_startpoint" type="SFVec3f"/>
         <field accessType="inputOnly" name="set_endpoint" type="SFVec3f"/>""&#xD;
""&#xD;
"            ecmascript:"&#xD;
"        function recompute(startpoint,endpoint){"&#xD;
"\t    if (typeof endpoint === 'undefined') {"&#xD;
"\t\treturn;"&#xD;
"\t    }"&#xD;
"            var dif = endpoint.subtract(startpoint);"&#xD;
"            var dist = dif.length()*0.5;"&#xD;
"            var dif2 = dif.multiply(0.5);"&#xD;
"            var norm = dif.normalize();"&#xD;
"            var transl = startpoint.add(dif2);"&#xD;
"\t    if (typeof Quaternion !== 'undefined') {"&#xD;
"\t\t    return {"&#xD;
"\t\t\t    scale : new SFVec3f(1.0,dist,1.0),"&#xD;
"\t\t\t    translation : transl,"&#xD;
"\t\t\t    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)"&#xD;
"\t\t    };"&#xD;
"\t    } else {"&#xD;
"\t\t    return {"&#xD;
"\t\t\t    scale : new SFVec3f(1.0,dist,1.0),"&#xD;
"\t\t\t    translation : transl,"&#xD;
"\t\t\t    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)"&#xD;
"\t\t    };"&#xD;
"\t    }"&#xD;
"\t}"&#xD;
"\tfunction recompute_and_route(startpoint, endpoint) {"&#xD;
"\t      var trafo = recompute(startpoint, endpoint);"&#xD;
"\t      transC1.translation = trafo.translation;"&#xD;
"\t      rotscaleC1.rotation = trafo.rotation;"&#xD;
"\t      rotscaleC1.scale = trafo.scale;"&#xD;
"\t}"&#xD;
"        function initialize(){"&#xD;
"            recompute_and_route(startnode.translation,endnode.translation);"&#xD;
"        }"&#xD;
"        function set_startpoint(val,t){"&#xD;
"            recompute_and_route(val,endnode.translation);"&#xD;
"        }"&#xD;
"        function set_endpoint(val,t){"&#xD;
"            recompute_and_route(startnode.translation,val);"&#xD;
"        }"&#xD;
""&#xD;
""&#xD;
""</Script>
      <ROUTE fromField="translation_changed"
              fromNode="G1"
              toField="set_startpoint"
              toNode="DECLx3dconnector_connector1_S1"/>
      <ROUTE fromField="translation_changed"
              fromNode="G2"
              toField="set_endpoint"
              toNode="DECLx3dconnector_connector1_S1"/>
   </Scene>
</X3D>
